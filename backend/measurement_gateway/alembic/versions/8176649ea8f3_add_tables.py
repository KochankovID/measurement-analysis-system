"""Add tables

Revision ID: 8176649ea8f3
Revises: 
Create Date: 2022-06-04 11:14:12.648224

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8176649ea8f3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('type_description',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('gos_number', sa.String(), nullable=True),
    sa.Column('si_name', sa.String(), nullable=True),
    sa.Column('si_unit_of_measurement', sa.String(), nullable=True),
    sa.Column('si_measurement_error', sa.Float(), nullable=True),
    sa.Column('si_approval_date', sa.Date(), nullable=True),
    sa.Column('si_producer', sa.String(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_area',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('type_description_id', sa.Integer(), nullable=True),
    sa.Column('application_area_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['type_description_id'], ['type_description.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verification',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('type_description_id', sa.Integer(), nullable=True),
    sa.Column('si_modification', sa.String(), nullable=True),
    sa.Column('si_type', sa.String(), nullable=True),
    sa.Column('si_verification_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['type_description_id'], ['type_description.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('verification')
    op.drop_table('application_area')
    op.drop_table('type_description')
    # ### end Alembic commands ###
